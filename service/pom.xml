<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId></groupId>
        <artifactId></artifactId>
        <version></version>
    </parent>
    <artifactId>service</artifactId>
    <name></name>
    <description>Micro service</description>
    <properties>
        <image.tag>${project.version}</image.tag>
        <docker.registry>AWS_ID.dkr.ecr.eu-west-1.amazonaws.com</docker.registry>
        <docker.namespace></docker.namespace>
		    <isdeployable>true</isdeployable>
        <s3.bucket>helm-charts/service-charts</s3.bucket>
    </properties>

    <profiles>
        <profile>
            <id>generateDocker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.soebes.maven.plugins</groupId>
                        <artifactId>iterator-maven-plugin</artifactId>
                        <version>${maven.iterator.plugin.version}</version>
                        <executions>
                          <execution>
                            <phase>install</phase>
                            <goals>
                              <goal>iterator</goal>
                            </goals>
                            <configuration>
                              <items>
                                <item>${project.version}</item>
                                <item>${image.tag}</item>
                              </items>
                              <pluginExecutors>
                                <pluginExecutor>
                                    <plugin>
                                        <artifactId>maven-assembly-plugin</artifactId>
                                        <version>${maven.assembly.plugin.version}</version>
                                    </plugin>
                                    <goal>single</goal>
                                    <configuration>
                                        <appendAssemblyId>false</appendAssemblyId>
                                        <finalName>${project.artifactId}-${item}</finalName>
                                        <descriptors>
                                                <descriptor>src/assembly/assembly-helm.xml</descriptor>
                                        </descriptors>
                                    </configuration>               
                                </pluginExecutor>
                              </pluginExecutors>
                            </configuration>
                          </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${maven.dockerfile.plugin.version}</version>
                        <configuration>
                            <pullNewerImage>false</pullNewerImage>
                            <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                            <repository>${docker.registry}/${docker.namespace}/${project.artifactId}</repository>
                            <buildArgs>
                                <JAR_PATH>target/${project.build.finalName}.jar</JAR_PATH>
                                <JAR_NAME>${project.build.finalName}.jar</JAR_NAME>
                                <SERVICE_NAME>${project.artifactId}</SERVICE_NAME>
                            </buildArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <pushImage>false</pushImage>
                                    <tag>${project.version}</tag>
                                </configuration>
                                <phase>install</phase>
                            </execution>
                            <execution>
                                <id>tag</id>
                                <goals>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <pushImage>false</pushImage>
                                    <tag>${image.tag}</tag>
                                </configuration>
                                <phase>install</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>dockerPush</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${maven.dockerfile.plugin.version}</version>
                        <configuration>
                            <pullNewerImage>false</pullNewerImage>
                            <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                            <repository>${docker.registry}/${docker.namespace}/${project.artifactId}</repository>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>                                   
                                </goals>
                                <configuration>
                                    <tag>${project.version}</tag>
                                </configuration>
                            </execution>
                            <execution>
                                <id>versionedDockerPush</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>                                   
                                </goals>
                                <configuration>
                                    <tag>${image.tag}</tag>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${maven.exec.plugin.version}</version>
                        <executions>
                            <execution>
                              <id>aws-helm-push</id>
                              <phase>install</phase>
                              <goals>
                                <goal>exec</goal>
                              </goals>
                                <configuration>
                                  <!-- define the command to execute -->
                                  <executable>aws</executable>
                                  <arguments>
                                    <argument>s3</argument>
                                    <argument>cp</argument>
                                    <argument>target/${project.artifactId}-${project.version}.tgz</argument> 
                                    <argument>s3://${s3.bucket}/</argument>
                                    <argument>--content-type</argument>
                                    <argument>application/x-compressed</argument>                              
                                  </arguments>
                                </configuration>
                            </execution>
                            <execution>
                              <id>artifactory-helm-push</id>
                              <phase>install</phase>
                              <goals>
                                <goal>exec</goal>
                              </goals>
                                <configuration>
                                  <!-- define the command to execute -->
                                  <executable>curl</executable>
                                  <arguments>
                                    <argument>-v</argument>
                                    <argument>--user</argument>
                                    <argument>${helm.username}:${helm.password}</argument>
                                    <argument>--data-binary</argument>
                                    <argument>@target/${project.artifactId}-${project.version}.tgz</argument>
                                    <argument>-X</argument>
                                    <argument>PUT</argument>
                                    <argument>-H</argument>
                                    <argument>Content-Type: application/x-compressed</argument>
                                    <argument>http://artifactory:8081/artifactory/repo/service/${project.artifactId}-${image.tag}.tgz</argument>
                                  </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>aws-helm-push-versioned</id>
                                <phase>install</phase>
                                <goals>
                                  <goal>exec</goal>
                                </goals>
                                  <configuration>
                                    <!-- define the command to execute -->
                                    <executable>aws</executable>
                                    <arguments>
                                      <argument>s3</argument>
                                      <argument>cp</argument>
                                      <argument>target/${project.artifactId}-${image.tag}.tgz</argument> 
                                      <argument>s3://${s3.bucket}/</argument>
                                      <argument>--content-type</argument>
                                      <argument>application/x-compressed</argument>                              
                                    </arguments>
                                  </configuration>
                              </execution>
                              <execution>
                                <id>artifactory-helm-push-versioned</id>
                                <phase>install</phase>
                                <goals>
                                  <goal>exec</goal>
                                </goals>
                                  <configuration>
                                    <!-- define the command to execute -->
                                    <executable>curl</executable>
                                    <arguments>
                                      <argument>-v</argument>
                                      <argument>--user</argument>
                                      <argument>${helm.username}:${helm.password}</argument>
                                      <argument>--data-binary</argument>
                                      <argument>@target/${project.artifactId}-${image.tag}.tgz</argument>
                                      <argument>-X</argument>
                                      <argument>PUT</argument>
                                      <argument>-H</argument>
                                      <argument>Content-Type: application/x-compressed</argument>
                                      <argument>http://artifactory:8081/artifactory/repo/service/${project.artifactId}-${image.tag}.tgz</argument>
                                    </arguments>
                                  </configuration>
                              </execution>  
                          </executions>
                       </plugin>                    
                </plugins>
            </build>
        </profile>        
    </profiles>

</project>